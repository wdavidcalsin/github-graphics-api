[{"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/graphi1-charjs/src/App.tsx":"1","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/graphi1-charjs/src/service/github.service.ts":"2","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/graphi1-charjs/src/reportWebVitals.ts":"3"},{"size":898,"mtime":1610896197975,"results":"4","hashOfConfig":"5"},{"size":183,"mtime":1610733845625,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1610728657405,"results":"8","hashOfConfig":"9"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1n8yllm",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14wotg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dlp695","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/graphi1-charjs/src/App.tsx",["17","18","19"],"import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport ApiGithub from './service/github.service';\n\nconst data = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label: 'My First dataset',\n            backgroundColor: 'rgba(255,99,132,0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: [65, 59, 80, 81, 56, 55, 40],\n        },\n    ],\n};\n\nclass App extends React.Component {\n    async componentDidMount() {\n        const res: any = await new ApiGithub().getApi();\n        console.log(res.avatar_url);\n    }\n\n    render() {\n        return <Bar data={data} width={100} height={300} options={{ maintainAspectRatio: false }} />;\n    }\n}\n\nexport default App;\n","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/graphi1-charjs/src/service/github.service.ts",[],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/graphi1-charjs/src/reportWebVitals.ts",["20"],{"ruleId":"21","severity":1,"message":"22","line":21,"column":5,"nodeType":"23","messageId":"24","endLine":21,"endColumn":30},{"ruleId":"25","severity":1,"message":"26","line":22,"column":20,"nodeType":"27","messageId":"28","endLine":22,"endColumn":23,"suggestions":"29"},{"ruleId":"21","severity":1,"message":"22","line":26,"column":5,"nodeType":"23","messageId":"24","endLine":26,"endColumn":13},{"ruleId":"21","severity":1,"message":"22","line":3,"column":25,"nodeType":"30","messageId":"24","endLine":3,"endColumn":57},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["31","32"],"ArrowFunctionExpression",{"messageId":"33","fix":"34","desc":"35"},{"messageId":"36","fix":"37","desc":"38"},"suggestUnknown",{"range":"39","text":"40"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"39","text":"41"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[670,673],"unknown","never"]