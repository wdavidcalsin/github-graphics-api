[{"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/App.tsx":"1","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/reportWebVitals.ts":"2","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/service/github.service.ts":"3","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/index.tsx":"4","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/page/home.tsx":"5","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/interfaces/githubApi.ts":"6","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/options.tsx":"7","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/header.tsx":"8","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/show-content.tsx":"9","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/context/user.context.tsx":"10","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/search.tsx":"11","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/context/data.context.tsx":"12","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/layaut.tsx":"13","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/common/showNormal.tsx":"14"},{"size":466,"mtime":1611378603242,"results":"15","hashOfConfig":"16"},{"size":473,"mtime":1611202128276,"results":"17","hashOfConfig":"18"},{"size":384,"mtime":1611378603242,"results":"19","hashOfConfig":"16"},{"size":595,"mtime":1611119142459,"results":"20","hashOfConfig":"16"},{"size":690,"mtime":1611287596924,"results":"21","hashOfConfig":"16"},{"size":758,"mtime":1611118929263,"results":"22","hashOfConfig":"23"},{"size":2090,"mtime":1611202128276,"results":"24","hashOfConfig":"16"},{"size":1480,"mtime":1611539103430,"results":"25","hashOfConfig":"16"},{"size":2820,"mtime":1611415434762,"results":"26","hashOfConfig":"16"},{"size":1288,"mtime":1611379144912,"results":"27","hashOfConfig":"16"},{"size":1379,"mtime":1611378603242,"results":"28","hashOfConfig":"16"},{"size":940,"mtime":1611379049125,"results":"29","hashOfConfig":"16"},{"size":338,"mtime":1611461761895,"results":"30","hashOfConfig":"16"},{"size":399,"mtime":1611440665055,"results":"31","hashOfConfig":"16"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m152kd",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xnot5r",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"46ky4j",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/App.tsx",[],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/reportWebVitals.ts",[],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/service/github.service.ts",["66","67","68"],"import { GithubApiI } from '../interfaces/githubApi';\n\nclass ApiGithub {\n    public async getApi<T>(user: string) {\n        const response = await fetch(`https://api.github.com/users/${user}`);\n        // const body = await response.json();\n        // const status = await response.status;\n        // console.log(response);\n        return response;\n    }\n}\n\nexport default ApiGithub;\n",[],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/index.tsx",[],[],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/page/home.tsx",["69","70"],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/interfaces/githubApi.ts",[],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/options.tsx",[],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/header.tsx",["71","72"],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/show-content.tsx",["73","74","75","76","77"],"import React, { Component, ContextType } from 'react';\nimport ApiGithub from '../service/github.service';\nimport { GithubApiI } from '../interfaces/githubApi';\nimport { DataContext } from '../context/data.context';\nimport { Perfil, Blog } from './common/showNormal';\n\ntype MyProps = { props?: undefined };\ntype MyStates = { data: GithubApiI };\n\nclass ShowContent extends Component<MyProps, MyStates> {\n    static contextType = DataContext;\n    context!: ContextType<typeof DataContext>;\n\n    constructor(props?: any) {\n        super(props);\n\n        this.state = {\n            data: {} as GithubApiI,\n        };\n\n        // this.apiReturn = this.apiReturn.bind(this);\n    }\n\n    // async apiReturn() {}\n\n    async componentDidMount() {\n        console.log(typeof this.context.data);\n    }\n\n    render() {\n        return (\n            <div>\n                {Object.keys(this.context.data).length != 0 && this.context.resStatus != 404 ? (\n                    <div className=\"show-content\">\n                        <h2>Statistics</h2>\n                        {/* <div>Mostar:</div> */}\n                        <Perfil avatar={this.context.data.avatar_url} />\n\n                        {/*                         \n                        <h4>\n                            avatar_url: {this.context.data.avatar_url}\n                            <img src={this.context.data.avatar_url} alt=\"\" />\n                        </h4> */}\n                        <Blog blog={this.context.data.blog} />\n                        {/* <h4>blog: {this.context.data.blog}</h4> */}\n                        <h4>company: {this.context.data.company}</h4>\n                        <h4>created at: {this.context.data.created_at}</h4>\n                        <h4>email: {this.context.data.email}</h4>\n                        <h4>events url: {this.context.data.events_url}</h4>\n                        <h4>followers: {this.context.data.followers}</h4>\n                        <h4>followers url: {this.context.data.followers_url}</h4>\n                        <h4>following: {this.context.data.following}</h4>\n                        <h4>gists url: {this.context.data.gists_url}</h4>\n                        <h4>gravatar id: {this.context.data.gravatar_id}</h4>\n                        <h4>hireable: {this.context.data.hireable}</h4>\n                        <h4>html_url: {this.context.data.html_url}</h4>\n                        <h4>id: {this.context.data.id}</h4>\n                        <h4>location: {this.context.data.location}</h4>\n                        <h4>login: {this.context.data.login}</h4>\n                        <h4>name: {this.context.data.name}</h4>\n                    </div>\n                ) : (\n                    <div>No hay datos todavia</div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ShowContent;\n","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/context/user.context.tsx",["78","79","80","81"],"import React, { BaseSyntheticEvent, createContext, useContext, useState } from 'react';\nimport { GithubApiI } from '../interfaces/githubApi';\nimport ApiGithub from '../service/github.service';\nimport { useData } from './data.context';\n\ninterface IUserInput {\n    user: string;\n    setUser: (user: string) => void;\n    onSubmitsendUser: (e: BaseSyntheticEvent) => void;\n}\n\nexport const UserInputContext = createContext<IUserInput>({} as IUserInput);\n\nconst UserInputProvider = ({ children }: any) => {\n    const [user, setUser] = useState<string>('...');\n    const { data, resStatus, setData, setResSatus } = useData();\n\n    const onSubmitsendUser = async (e: BaseSyntheticEvent) => {\n        e.preventDefault();\n        const res = await new ApiGithub().getApi<GithubApiI>(user);\n        setData(await res.json());\n        setResSatus(await res.status);\n        console.log(data);\n        console.log(resStatus);\n    };\n\n    return (\n        <UserInputContext.Provider value={{ user, setUser, onSubmitsendUser }}>\n            {children}\n        </UserInputContext.Provider>\n    );\n};\n\nconst useUserInput = () => {\n    const { user, setUser, onSubmitsendUser } = useContext(UserInputContext);\n    return { user, setUser, onSubmitsendUser };\n};\n\nexport { UserInputProvider, useUserInput };\n","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/search.tsx",["82","83","84","85"],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/context/data.context.tsx",["86","87","88","89","90","91"],"import React, { BaseSyntheticEvent, createContext, useContext, useState } from 'react';\nimport { GithubApiI } from '../interfaces/githubApi';\nimport ApiGithub from '../service/github.service';\n\ninterface IData {\n    data: GithubApiI;\n    setData: (data: GithubApiI) => void;\n    resStatus: number;\n    setResSatus: (resStatus: number) => void;\n}\n\nexport const DataContext = createContext<IData>({} as IData);\n\nconst DataProvider = ({ children }: any) => {\n    const [data, setData] = useState<GithubApiI>({} as GithubApiI);\n    const [resStatus, setResSatus] = useState<number>(404);\n\n    return (\n        <DataContext.Provider value={{ data, resStatus, setData, setResSatus }}>\n            {children}\n        </DataContext.Provider>\n    );\n};\n\nconst useData = () => {\n    const { data, resStatus, setData, setResSatus } = useContext(DataContext);\n    return { data, resStatus, setData, setResSatus };\n};\n\nexport { DataProvider, useData };\n","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/layaut.tsx",[],"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/github-graphics-api/src/components/common/showNormal.tsx",["92","93","94","95","96","97","98"],{"ruleId":"99","severity":1,"message":"100","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":4,"column":5,"nodeType":"105","messageId":"106","endLine":4,"endColumn":41},{"ruleId":"99","severity":1,"message":"107","line":4,"column":25,"nodeType":"101","messageId":"102","endLine":4,"endColumn":26},{"ruleId":"99","severity":1,"message":"108","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":41},{"ruleId":"99","severity":1,"message":"109","line":1,"column":54,"nodeType":"101","messageId":"102","endLine":1,"endColumn":73},{"ruleId":"99","severity":1,"message":"110","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":11},{"ruleId":"99","severity":1,"message":"111","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":12},{"ruleId":"99","severity":1,"message":"112","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"103","severity":1,"message":"113","line":14,"column":17,"nodeType":"101","messageId":"114","endLine":14,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":14,"column":25,"nodeType":"117","messageId":"118","endLine":14,"endColumn":28,"suggestions":"119"},{"ruleId":"103","severity":1,"message":"104","line":26,"column":5,"nodeType":"105","messageId":"106","endLine":26,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":30,"column":5,"nodeType":"105","messageId":"106","endLine":30,"endColumn":13},{"ruleId":"103","severity":1,"message":"104","line":14,"column":27,"nodeType":"120","messageId":"106","endLine":14,"endColumn":49},{"ruleId":"103","severity":1,"message":"121","line":14,"column":28,"nodeType":"122","messageId":"123","endLine":14,"endColumn":45},{"ruleId":"115","severity":1,"message":"116","line":14,"column":42,"nodeType":"117","messageId":"118","endLine":14,"endColumn":45,"suggestions":"124"},{"ruleId":"103","severity":1,"message":"104","line":34,"column":22,"nodeType":"120","messageId":"106","endLine":34,"endColumn":27},{"ruleId":"99","severity":1,"message":"125","line":3,"column":28,"nodeType":"101","messageId":"102","endLine":3,"endColumn":45},{"ruleId":"99","severity":1,"message":"126","line":3,"column":47,"nodeType":"101","messageId":"102","endLine":3,"endColumn":59},{"ruleId":"103","severity":1,"message":"113","line":12,"column":17,"nodeType":"101","messageId":"114","endLine":12,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":12,"column":25,"nodeType":"117","messageId":"118","endLine":12,"endColumn":28,"suggestions":"127"},{"ruleId":"99","severity":1,"message":"128","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":35},{"ruleId":"99","severity":1,"message":"112","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":14,"column":22,"nodeType":"120","messageId":"106","endLine":14,"endColumn":44},{"ruleId":"103","severity":1,"message":"121","line":14,"column":23,"nodeType":"122","messageId":"123","endLine":14,"endColumn":40},{"ruleId":"115","severity":1,"message":"116","line":14,"column":37,"nodeType":"117","messageId":"118","endLine":14,"endColumn":40,"suggestions":"129"},{"ruleId":"103","severity":1,"message":"104","line":25,"column":17,"nodeType":"120","messageId":"106","endLine":25,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":4,"column":16,"nodeType":"120","messageId":"106","endLine":4,"endColumn":31},{"ruleId":"103","severity":1,"message":"113","line":4,"column":17,"nodeType":"101","messageId":"114","endLine":4,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":4,"column":24,"nodeType":"117","messageId":"118","endLine":4,"endColumn":27,"suggestions":"130"},{"ruleId":"103","severity":1,"message":"104","line":15,"column":14,"nodeType":"120","messageId":"106","endLine":15,"endColumn":29},{"ruleId":"103","severity":1,"message":"113","line":15,"column":15,"nodeType":"101","messageId":"114","endLine":15,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":15,"column":22,"nodeType":"117","messageId":"118","endLine":15,"endColumn":25,"suggestions":"131"},"@typescript-eslint/no-unused-vars","'GithubApiI' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionExpression","missingReturnType","'T' is defined but never used.","'CSSProperties' is defined but never used.","'StyleHTMLAttributes' is defined but never used.","'Sol' is defined but never used.","'Luna' is defined but never used.","'ApiGithub' is defined but never used.","Argument 'props' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["132","133"],"ArrowFunctionExpression","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["134","135"],"'UserInputProvider' is defined but never used.","'useUserInput' is defined but never used.",["136","137"],"'BaseSyntheticEvent' is defined but never used.",["138","139"],["140","141"],["142","143"],{"messageId":"144","fix":"145","desc":"146"},{"messageId":"147","fix":"148","desc":"149"},{"messageId":"144","fix":"150","desc":"146"},{"messageId":"147","fix":"151","desc":"149"},{"messageId":"144","fix":"152","desc":"146"},{"messageId":"147","fix":"153","desc":"149"},{"messageId":"144","fix":"154","desc":"146"},{"messageId":"147","fix":"155","desc":"149"},{"messageId":"144","fix":"156","desc":"146"},{"messageId":"147","fix":"157","desc":"149"},{"messageId":"144","fix":"158","desc":"146"},{"messageId":"147","fix":"159","desc":"149"},"suggestUnknown",{"range":"160","text":"161"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"160","text":"162"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"163","text":"161"},{"range":"163","text":"162"},{"range":"164","text":"161"},{"range":"164","text":"162"},{"range":"165","text":"161"},{"range":"165","text":"162"},{"range":"166","text":"161"},{"range":"166","text":"162"},{"range":"167","text":"161"},{"range":"167","text":"162"},[512,515],"unknown","never",[491,494],[479,482],[446,449],[108,111],[320,323]]