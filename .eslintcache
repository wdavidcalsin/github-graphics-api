[{"/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/graphi1-charjs/src/App.tsx":"1"},{"size":1224,"mtime":1610916768541,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"171p9cs","/run/media/wdavid/c3172838-fbb0-4a0a-8d10-7c4f09079164/practica/react/graphi1-charjs/src/App.tsx",["6","7","8"],{"ruleId":"9","severity":1,"message":"10","line":21,"column":5,"nodeType":"11","messageId":"12","endLine":21,"endColumn":30},{"ruleId":"13","severity":1,"message":"14","line":22,"column":20,"nodeType":"15","messageId":"16","endLine":22,"endColumn":23,"suggestions":"17"},{"ruleId":"9","severity":1,"message":"10","line":26,"column":5,"nodeType":"11","messageId":"12","endLine":26,"endColumn":13},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["18","19"],{"messageId":"20","fix":"21","desc":"22"},{"messageId":"23","fix":"24","desc":"25"},"suggestUnknown",{"range":"26","text":"27"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"26","text":"28"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[670,673],"unknown","never"]